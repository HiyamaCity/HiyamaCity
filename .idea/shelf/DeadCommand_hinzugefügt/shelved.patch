Index: src/main/java/de/hiyamacity/commands/user/DeadCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/hiyamacity/commands/user/DeadCommand.java b/src/main/java/de/hiyamacity/commands/user/DeadCommand.java
new file mode 100644
--- /dev/null	(date 1648760637536)
+++ b/src/main/java/de/hiyamacity/commands/user/DeadCommand.java	(date 1648760637536)
@@ -0,0 +1,36 @@
+package de.hiyamacity.commands.user;
+
+import de.hiyamacity.util.LanguageHandler;
+import org.bukkit.Bukkit;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandExecutor;
+import org.bukkit.command.CommandSender;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ResourceBundle;
+
+public class DeadCommand implements CommandExecutor {
+
+    @Override
+    public boolean onCommand(@NotNull CommandSender Sender, @NotNull Command command, @NotNull String s, @NotNull String[] args) {
+        if (!(Sender instanceof Player)) return true;
+        Player p = (Player) Sender;
+        ResourceBundle resourceBundle = LanguageHandler.getResourceBundle(p.getUniqueId());
+
+        if (args.length != 1) {
+            p.sendMessage(resourceBundle.getString("DeadUsage"));
+            return true;
+        }
+
+        Player t = Bukkit.getPlayer(args[0]);
+        if (t == null) {
+            p.sendMessage(resourceBundle.getString("playerNotFound").replace("%target%", args[0]));
+            return true;
+        }
+
+
+       return false;
+    }
+
+}
Index: src/main/resources/plugin.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: Script\r\nversion: 1.0\r\nmain: de.hiyamacity.main.Main\r\nauthor: AhegaHOE\r\napi-version: 1.16\r\ncommands:\r\n  ping:\r\n    description: Allows the player to check their ping.\r\n  stats:\r\n    description: Allows the player to see their stats.\r\n  gm:\r\n    description: Allows the player to change their game mode.\r\n    aliases: [ gamemode ]\r\n  pay:\r\n    description: Allows the player to pay money to other players.\r\n  info:\r\n    description: Allows the player to get informations.\r\n  me:\r\n    description: Allows the player to do actions.\r\n  kiss:\r\n    description: Allows the player to kiss other players.\r\n  time:\r\n    description: Allows the player to get the current time.\r\n  dice:\r\n    description: Allows the player to roll a dice.\r\n  m:\r\n    description: Allows the player to message other players.\r\n    aliases: [ message ]\r\n  show-finances:\r\n    description: Allows the player to show their finances to other players.\r\n    aliases: [ showfinances ]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
--- a/src/main/resources/plugin.yml	(revision 12c2a50da2e0b7d425c310acc17a11f4dac94d72)
+++ b/src/main/resources/plugin.yml	(date 1648760879137)
@@ -28,4 +28,6 @@
     aliases: [ message ]
   show-finances:
     description: Allows the player to show their finances to other players.
-    aliases: [ showfinances ]
\ No newline at end of file
+    aliases: [ showfinances ]
+  dead:
+    description: Allows the player to see the deadcounter
Index: src/main/java/de/hiyamacity/lang/LanguagePack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.hiyamacity.lang;\r\n\r\nimport java.util.ListResourceBundle;\r\n\r\npublic class LanguagePack extends ListResourceBundle {\r\n\r\n    @Override\r\n    protected Object[][] getContents() {\r\n        return contents;\r\n    }\r\n\r\n    private final Object[][] contents = {\r\n            // Errors\r\n            {\"playerNotFound\", \"§cFehler: Der Spieler %target% wurde nicht gefunden.\"},\r\n            {\"playerTooFarAway\", \"§cFehler: Der angegebene Spieler ist zu weit entfernt.\"},\r\n            {\"payNonNegative\", \"§cFehler: Der angegebene Betrag darf nicht < 0 sein.\"},\r\n            {\"payInsufficientAmount\", \"§cFehler: Du kannst nicht mehr Geld abgeben als du dabei hast.\"},\r\n            {\"payCantPaySelf\", \"§cFehler: Du kannst dir selber kein Geld zustecken.\"},\r\n            {\"gmInvalidGameMode\", \"§cFehler: Dein angegebener GameMode muss ≤ 0 ≤ 3 sein.\"},\r\n            {\"kissSelf\", \"§cFehler: Du kannst dich nicht selber küssen.\"},\r\n            {\"messageNotToYourself\", \"§cFehler: Du kannst dir selbst keine Nachricht schicken\"},\r\n            // Usages\r\n            {\"meUsage\", \"§cFehler: Benutze \\\"/me <Aktion>\\\"\"},\r\n            {\"kissUsage\", \"§cFehler: Benutze \\\"/kiss <Spielername>\\\"\"},\r\n            {\"messageUsage\", \"§cFehler: Benutze \\\"/m <Spielername> <Nachricht>\\\"\"},\r\n            {\"gmUsage\", \"§cFehler: Benutze \\\"/gm <0-3> [Spielername]\\\"\"},\r\n            {\"payUsage\", \"§cFehler: Benutze \\\"/pay <Spielername> <Betrag>\\\"\"},\r\n            {\"showFinancesUsage\", \"§cFehler: Benutze \\\"/showfinances <Spielername>\\\"\"},\r\n            // Messages\r\n            {\"pingMessage\", \"§9%target% §7hat einen Ping von §9%ping%§7ms.\"},\r\n            {\"statsMessage\", \"§8==============================\\n§7Spielername: §9%target%\\n§7Spielzeit §9%hours%§7 std. §9%minutes%§7 min.\\n§7Portemonnaie: §9%money%§7$, Bank: §9%bank%§7$.\\n§8==============================\"},\r\n            {\"gmPrefix\", \"§8[§aSpielmodus§8]§7\"},\r\n            {\"gmSelfChanged\", \"§7Dein §aSpielmodus §7wurde zu §a%gamemode% §7geändert.\"},\r\n            {\"gmSelfChangedOther\", \"§7Du hast den §aSpielmodus §7von §a%target% §7zu §a%gamemode% §7geändert.\"},\r\n            {\"gmOtherChangedOther\", \"§a%player% §7hat deinen §aSpielmodus §7zu §a%gamemode% §7geändert.\"},\r\n            {\"paySend\", \"§7Du hast §9%target% %amount%$ §7zugesteckt.\"},\r\n            {\"payReceive\", \"§9%player% §7hat dir §9%amount%$ §7zugesteckt.\"},\r\n            {\"me\", \"§3* %player% %message%\"},\r\n            {\"kiss\", \"§d*§5 %player%§d hat §5%target%§d einen Kuss gegeben.\"},\r\n            {\"dice\", \"§9%player% §7hat eine §9%result% §7gewürfelt.\"},\r\n            {\"showFinancesSelf\", \"§7Du hast §9%target% §7deine Finanzen gezeigt.\"},\r\n            {\"showFinancesOther\", \"§9%player%§7 gibt dir einen Einblick ins Portemonnaie von sich\\n§7Portemonnaie: §9%money%§7$.\"},\r\n            {\"messageSelf\", \"§7[§9Du §7-> §9%target%§7] §r%msg%\"},\r\n            {\"messageOther\", \"§7[§9%player% -> §9Dir§7] §r%msg%\"}\r\n    };\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/hiyamacity/lang/LanguagePack.java b/src/main/java/de/hiyamacity/lang/LanguagePack.java
--- a/src/main/java/de/hiyamacity/lang/LanguagePack.java	(revision 12c2a50da2e0b7d425c310acc17a11f4dac94d72)
+++ b/src/main/java/de/hiyamacity/lang/LanguagePack.java	(date 1648760637785)
@@ -26,6 +26,7 @@
             {"gmUsage", "§cFehler: Benutze \"/gm <0-3> [Spielername]\""},
             {"payUsage", "§cFehler: Benutze \"/pay <Spielername> <Betrag>\""},
             {"showFinancesUsage", "§cFehler: Benutze \"/showfinances <Spielername>\""},
+            {"DeadUsage","§cFehler: Benutze \"/Dead <Spielernamen>\""},
             // Messages
             {"pingMessage", "§9%target% §7hat einen Ping von §9%ping%§7ms."},
             {"statsMessage", "§8==============================\n§7Spielername: §9%target%\n§7Spielzeit §9%hours%§7 std. §9%minutes%§7 min.\n§7Portemonnaie: §9%money%§7$, Bank: §9%bank%§7$.\n§8=============================="},
Index: src/main/java/de/hiyamacity/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.hiyamacity.main;\r\n\r\nimport de.hiyamacity.commands.admin.GameModeCommand;\r\nimport de.hiyamacity.commands.user.*;\r\nimport de.hiyamacity.database.ConnectionPool;\r\nimport de.hiyamacity.listener.DamageHandler;\r\nimport de.hiyamacity.listener.JoinHandler;\r\nimport de.hiyamacity.util.PlaytimeTracker;\r\nimport org.bukkit.Bukkit;\r\nimport org.bukkit.plugin.PluginManager;\r\nimport org.bukkit.plugin.java.JavaPlugin;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class Main extends JavaPlugin {\r\n\r\n    PluginManager pm = Bukkit.getPluginManager();\r\n    private static Main instance;\r\n\r\n    public static Main getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public void onEnable() {\r\n        instance = this;\r\n        ConnectionPool.writeFile();\r\n        ConnectionPool.initDatabaseConnectionPool();\r\n        ConnectionPool.initDatabases();\r\n        loadCommands();\r\n        loadListeners();\r\n        PlaytimeTracker.startPlaytimeTracker();\r\n    }\r\n\r\n    public void onDisable() {\r\n        ConnectionPool.closeDatabaseConnectionPool();\r\n    }\r\n\r\n    private void loadCommands() {\r\n        Objects.requireNonNull(getCommand(\"ping\")).setExecutor(new PingCommand());\r\n        Objects.requireNonNull(getCommand(\"stats\")).setExecutor(new StatsCommand());\r\n        Objects.requireNonNull(getCommand(\"gm\")).setExecutor(new GameModeCommand());\r\n        Objects.requireNonNull(getCommand(\"pay\")).setExecutor(new PayCommand());\r\n        Objects.requireNonNull(getCommand(\"info\")).setExecutor(new InfoCommand());\r\n        Objects.requireNonNull(getCommand(\"me\")).setExecutor(new MeCommand());\r\n        Objects.requireNonNull(getCommand(\"kiss\")).setExecutor(new KissCommand());\r\n        Objects.requireNonNull(getCommand(\"time\")).setExecutor(new TimeCommand());\r\n        Objects.requireNonNull(getCommand(\"dice\")).setExecutor(new DiceCommand());\r\n        Objects.requireNonNull(getCommand(\"m\")).setExecutor(new MessageCommand());\r\n        Objects.requireNonNull(getCommand(\"show-finances\")).setExecutor(new ShowFinancesCommand());\r\n    }\r\n\r\n    private void loadListeners() {\r\n        this.pm.registerEvents(new JoinHandler(), this);\r\n        this.pm.registerEvents(new DamageHandler(), this);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/de/hiyamacity/main/Main.java b/src/main/java/de/hiyamacity/main/Main.java
--- a/src/main/java/de/hiyamacity/main/Main.java	(revision 12c2a50da2e0b7d425c310acc17a11f4dac94d72)
+++ b/src/main/java/de/hiyamacity/main/Main.java	(date 1648760879101)
@@ -47,6 +47,7 @@
         Objects.requireNonNull(getCommand("dice")).setExecutor(new DiceCommand());
         Objects.requireNonNull(getCommand("m")).setExecutor(new MessageCommand());
         Objects.requireNonNull(getCommand("show-finances")).setExecutor(new ShowFinancesCommand());
+        Objects.requireNonNull(getCommand("dead")).setExecutor(new DeadCommand());
     }
 
     private void loadListeners() {
